<?php

/**
 * @file
 * General functions and hook implementations.
 * Zip codes pulled from http://www.nycbynatives.com/nyc_info/new_york_city_zip_codes.php
 *
 */

/**
 * Implements hook_menu().
 */
function fastlane_menu() {
  $items = array();

  $items['payeezy'] = array(
    'title' => 'Payeezy Gateway Post',
    'description' => 'Payeezy POST.',
    'page callback' => 'fastlane_payeezy_post_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['payment/%/%'] = array(
    'title' => 'Payeezy Payment Form',
    'description' => 'Creates form for posting reservations to Payeezy Gateway',
    'page callback' => 'fastlane_payeezy_form_callback',
    'page arguments' => array(2, 3),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Menu callback function for Payeezy to send back confirmation of payment.
 */
function fastlane_payeezy_post_callback() {
  $content = t('you have arrived the payeezy way');
  $content .= t('Tame the query string!');

}

/**
 * A simple page callback.
 *
 * Page callbacks are required to return the entire page. The content
 * is then usually output via a call to theme('page'), where the theme system
 * will then surround the content in the appropriate blocks, navigation, and
 * styling.
 *
 * If you do not want to use the theme system (for example for outputting an
 * image or XML), you should print the content yourself and not return anything.
 */

/**
 * Menu callback function for Payeezy Form page.
 */
function fastlane_payeezy_form_callback() {

  $my_webform_nid = arg(1);
  $my_sid = arg(2);

  $node = node_load($my_webform_nid);
  $nodes = array($node->nid => $node);
  webform_node_load($nodes,array('webform'));

  $components = $nodes[$node->nid]->webform['components'];
  $data = webform_menu_submission_load($my_sid,$my_webform_nid)->data;
  //dpm($components = $nodes[$node->nid]->webform['components'], '$components');
  //dpm($data = webform_menu_submission_load($my_sid,$my_webform_nid)->data, '$data');

  // set easy to remember vars from data array
  $customer_id = $data[55][0];
  $first_name = $data[2][0];
  $last_name = $data[3][0];
  $email = $data[1][0];
  $phone_number = $data[9][0];
  $address = $data[11][0] . $data[12][0];
  $city = $data[13][0];
  $state = $data[32][0];
  $zip = $data[15][0];
  $country = 'United States';

  //$rental_total = $data[46][0];
  $daily_rental_fee = '250.00';
  $sub_total = $data[50][0];
  $tax_total = $data[49][0];
  $grand_total = $data[51][0];
  $delivery_fee = $data[48][0];
  $delivery_fee_display = 'Delivery fee';
  //dpm($delivery_fee, '$delivery_fee');
  $tax_amount_display = $data[49][0];

  $bike_id = $my_webform_nid;
  $length_of_rental = $data[45][0];
  $motorcycle = $data[37][0];
  $description = 'motorcycle rental';
  $duration = $data[57][0];

  //$delivery_fee = 0;

  // dpm($data);
  // dpm($duration, '$duration');

  $motorcycle_line_item = $bike_id . '<|>' . $motorcycle . '<|>' .   $motorcycle . ' ' . $description . '<|>' . $duration  . '<|>' . $daily_rental_fee . '<|>YES';

  // $delivery_line_item = // df<|>35<|>NYC Delivery fee<|>1<|>35<|>YES";
  //$tax_line_item = //value="1<|>2016 Indian<|>One baddass bike<|>1<|>250.00<|>YES" type="text" />';

  $delivery_line_item = 'df<|>Delivery fee<|>' .  $delivery_fee_display . '<|>1<|>' . $delivery_fee . '<|>YES';

  //$delivery_line_item = trim('df<|>Delivery fee<|>' . $delivery_fee_display . '<|>1<|>' . $delivery_fee . '<|>YES');

  //$tax_line_item = 'tx<|>Delivery fee<|>TBD<|>1<|>' . $tax_total . '<|>YES';
  $tax_line_item = 'tx<|>NJ Tax<|>New Jesey tax 7%<|>1<|>' . $tax_total . '<|>NO';

  dpm($motorcycle_line_item, '$motorcycle_line_item');
  dpm($delivery_line_item, '$delivery_line_item');
  dpm($tax_line_item, 'tax line item');

  // generate invoice number 2016-01-03 40-1
  $invoice_number = date('Y-m-d') . ' ' . $my_sid . '-' . $customer_id ;

  // fields required for payeezy gateway
  $x_login = "HCO-FREEL-525"; // Take from Payment Page ID in Payment Pages interface
  $transaction_key = "Ibow1_b7G52nAoEyKtHn"; // Take from Payment Pages configuration interface
  $x_amount = $grand_total;
  // $x_amount = $_POST["x_amount"];
  $x_currency_code = "USD"; // Needs to agree with the currency of the payment page
srand(time()); // initialize random generator for x_fp_sequence
  $x_fp_sequence = rand(1000, 100000) + 123456;
  $x_fp_timestamp = time(); // needs to be in UTC. Make sure webserver produces UTC

  // The values that contribute to x_fp_hash
  $hmac_data = $x_login . "^" . $x_fp_sequence . "^" . $x_fp_timestamp . "^" . $x_amount . "^" . $x_currency_code;
  $x_fp_hash = hash_hmac('MD5', $hmac_data, $transaction_key);

  $content = '<div class="progress" style="width: 60%">
  <div class="progress-bar progress-bar-info active progress-bar-striped" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%">Processing Please Wait...
  </div>
</div>';

  // required fields
  $content .= '<form action="https://demo.globalgatewaye4.firstdata.com/pay" method="POST" name="myForm" id="myForm">';

  $content .= '<div class="form-group">';
  $content .= '<input class="form-control" name="x_login" value="' . $x_login . '" type="text">';
  $content .= '<input class="form-control" name="x_amount" value="' . $x_amount . '" type="text">';
  $content .= '<input class="form-control" name="x_fp_sequence" value="' . $x_fp_sequence . '" type="text">';
  $content .= '<input class="form-control" name="x_fp_timestamp" value="' . $x_fp_timestamp . '" type="text">';
  $content .= '<input class="form-control" name="x_fp_hash" value="' . $x_fp_hash . '" size="50" type="text">';
  $content .= '<input class="form-control" name="x_currency_code" value="' . $x_currency_code . '" type="text">';
  $content .= '<input class="form-control" type="text" name="x_show_form" value="PAYMENT_FORM"/>';

  // fastlane fields
  $content .= '<input class="form-control" type="text" name="x_logo_url" value="http://fastlanemotorcyclerentals.com/files/files/logo/logo.svg"/>';
  $content .= '<input class="form-control" type="text" name="x_invoice_num" value="' . $invoice_number . '"/>';

  $content .= '<input class="form-control" name="x_line_item" value="' . $motorcycle_line_item . '"/>';

  $content .= '<input class="form-control" name="x_line_item" value="' . $delivery_line_item . '"/>';

  $content .= '<input class="form-control" name="x_line_item" value="' . $tax_line_item . '"/>';

  // $content .= '<input class="form-control" name="x_line_item" value="' . $delivery_line_item .'" type="text" />';

  //$content .= '<input class="form-control" name="x_line_item" value="' . $tax_line_item . '"/>';

  $content .= '<input class="form-control" type="text" name="x_first_name" value="' . $first_name . '"/>';
  $content .= '<input class="form-control" type="text" name="x_last_name" value="' . $last_name . '"/>';
  $content .= '<input class="form-control" type="text" name="x_address" value="' . $address . '"/>';
  $content .= '<input class="form-control" type="text" name="x_city" value="' . $city . '"/>';
  $content .= '<input class="form-control" type="text" name="x_state" value="' . $state . '"/>';
  $content .= '<input class="form-control" type="text" name="x_zip" value="' . $zip . '"/>';
  $content .= '<input class="form-control" type="text" name="x_country" value="' . $country . '"/>';
  $content .= '<input class="form-control" type="text" name="x_phone" value="' . $phone . '"/>';
  $content .= '<input class="form-control" type="text" name="x_email" value="' . $email . '"/>';

  $content .= '</div>';
  $content .= '<button type="submit" class="btn btn-success">Submit</button>';

  // create parameters input in html
  foreach ($_POST as $a => $b) {
    $content .= "<input type='text' name='". htmlentities($a) ."' value='". htmlentities($b) ."'>";
  }

  $content .= '</form>';

  $content .= '<script type="text/javascript">document.myForm.submit();</script>';

  return $content;



//   echo '<h1>Processing Please Wait...</h1>';
//   echo '<form action="https://demo.globalgatewaye4.firstdata.com/pay" method="POST" name="myForm" id="myForm">';

//   $x_login = "HCO-FREEL-525"; // Take from Payment Page ID in Payment Pages interface
//   $transaction_key = "Ibow1_b7G52nAoEyKtHn"; // Take from Payment Pages configuration interface
//   $x_amount = $_POST["x_amount"];
//   $x_currency_code = "USD"; // Needs to agree with the currency of the payment page
// srand(time()); // initialize random generator for x_fp_sequence
//   $x_fp_sequence = rand(1000, 100000) + 123456;
//   $x_fp_timestamp = time(); // needs to be in UTC. Make sure webserver produces UTC

//   // The values that contribute to x_fp_hash
//   $hmac_data = $x_login . "^" . $x_fp_sequence . "^" . $x_fp_timestamp . "^" . $x_amount . "^" . $x_currency_code;
//   $x_fp_hash = hash_hmac('MD5', $hmac_data, $transaction_key);

//   echo ('<input name="x_login" value="' . $x_login . '" type="text">' );
//   echo ('<input name="x_amount" value="' . $x_amount . '" type="text">' );
//   echo ('<input name="x_fp_sequence" value="' . $x_fp_sequence . '" type="text">' );
//   echo ('<input name="x_fp_timestamp" value="' . $x_fp_timestamp . '" type="text">' );
//   echo ('<input name="x_fp_hash" value="' . $x_fp_hash . '" size="50" type="text">' );
//   echo ('<input name="x_currency_code" value="' . $x_currency_code . '" type="text">');

//   // create parameters input in html
//   foreach ($_POST as $a => $b) {
//     echo "<input type='text' name='". htmlentities($a) ."' value='". htmlentities($b) ."'>";
//   }

//   echo '</form>';

}


/**
 * Implements hook_views_api().
 */
function fastlane_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_form_alter().
 */
function fastlane_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == 'availability_calendar_booking_formlet_form') {

    //dpm($form, 'form array');
     /******************************************************************
     *  availability calendar booking formlet overrides
     *  Add delivery time field
     *  TODO: Validate delivery times
     ******************************************************************/

    // $form['delivery_time'] = array(
    //    '#type' => 'select',
    //    '#title' => t('Delivery and pickup time,'),
    //    '#options' => array(
    //       '0700' => t('07:00 am'),
    //       '0800' => t('08:00 am'),
    //       '0900' => t('09:00 am'),
    //       '1000' => t('10:00 am'),
    //       '1100' => t('11:00 am'),
    //       '1200' => t('12:00 pm'),
    //       '1300' => t('01:00 pm'),
    //       '1400' => t('02:00 pm'),
    //       '1500' => t('03:00 pm'),
    //       '1600' => t('04:00 pm'),
    //       '1700' => t('05:00 pm'),
    //       '1800' => t('06:00 pm'),
    //       '1900' => t('07:00 pm'),
    //       '2000' => t('08:00 pm'),
    //       '2100' => t('09:00 pm'),
    //       '2200' => t('10:00 pm'),
    //    ),
    //    // '#default_value' => $category['selected'],
    //    '#required' => TRUE,
    //    '#description' => t('Select delivery and pick up time'),
    //    '#weight' => '0',
    // );

  } // $form_id == 'availability_calendar_booking_formlet_form')

  if ($form_id == 'webform_client_form_8') {

    //dpm($form['submitted'], '$form submitted');

    /*****************************************************************************
    *  Webform overrides
    *  Form requires that user is logged in
    *  If logged in, but entity_id isn't set, then redirect to motorcyles page
    *  Set values for markup fields
    *  Calculate delivery distance
    *  Calculate final cost
   *****************************************************************************/

    // create array of query string
    $query_parameters = drupal_get_query_parameters();

    if (isset($query_parameters['entity_id'])) {

      $nid = $query_parameters['entity_id']; // $nid

      // Calculate delivery distance based on user geolocation and location of bike

      // load $user data;
      global $user;
      $user_fields = user_load($user->uid);

      // If for some reason the user isn't logged then redirect to motorcycles pages
      if ($user_fields->uid != 0) {

        $customer_id = $user_fields->uid;
        $email = $user_fields->mail;
        $first_name = $user_fields->field_address['und'][0]['first_name'];
        $last_name = $user_fields->field_address['und'][0]['last_name'];
        $phone_number = $user_fields->field_phone_number['und'][0]['value'];
        $address_1 = $user_fields->field_address['und'][0]['thoroughfare']; // street
        $address_2 = $user_fields->field_address['und'][0]['premise']; // address 2
        $city = $user_fields->field_address['und'][0]['locality']; // city
        $state = $user_fields->field_address['und'][0]['administrative_area']; // state
        $zip_code = $user_fields->field_address['und'][0]['postal_code']; // zipcode
        // $zip_code = '10103'; // zipcode test if in NYC
        $geolocation = $user_fields->field_geofield['und'][0]['geom']; // geofield (POINT (-104.803022838.8879924)

        // get proximity of user from resource, set value and display text
        $view_name = 'distance_from_user';
        $display_id = 'default';
        $delivery_distance = trim(strip_tags(views_embed_view($view_name, $display_id, $nid)));
        $delivery_distance_display = $delivery_distance . ' miles';

        $delivery_time = $query_parameters['delivery_time'];
        // convert military time standard time
        $delivery_time = date("g:i a", strtotime($delivery_time));

       $duration = ($query_parameters['duration'] - 1); // when choosing day vs over-night the duration is inflated by 1

       if ($duration > 1) {
        $duration_display = t($duration . ' days');
       }
       else {
        $duration_display = t($duration . ' day');
       }


      // dynamic values
      $form['submitted']['rental_details']['deliver_pickup_time']['#default_value'] = $delivery_time;

      // $form['submitted']['duration']['#default_value'] = $duration;

     // contact fieldset
      $form['submitted']['contact']['first_name']['#default_value'] = $first_name;
      $form['submitted']['contact']['last_name']['#default_value'] = $last_name;
      $form['submitted']['contact']['email']['#default_value'] = $email;
      $form['submitted']['contact']['phone_number']['#default_value'] = $phone_number;

      // delivery_address fieldset
      $form['submitted']['delivery_address']['address_1']['#default_value'] = $address_1;
      $form['submitted']['delivery_address']['address_2']['#default_value'] = $address_2;
      $form['submitted']['delivery_address']['city']['#default_value'] = $city;
      $form['submitted']['delivery_address']['state']['#default_value'] = $state;
      $form['submitted']['delivery_address']['zip_code']['#default_value'] = $zip_code;

      // private fields
      $form['submitted']['private_fields']['customer_id']['#default_value'] = $customer_id;
      $form['submitted']['private_fields']['duration']['#default_value'] = $duration;


        /*
          calculate the delivery fee.
          $35 Within NYC
          Free <= 25 miles
          $25 < 25 and 50 miles
          Call for quote greater than 50 miles
        */

        // set defaults
        // $delivery_distance = $form['delivery_distance']['#default_value'];
        $delivery_fee = '0';
        $delivery_fee_display = t('');

        $nyc_zipcodes = '10001,10002,10003,10004,10005,10006,10007,10009,10010,10011,10012,10013,10014,10015,10016,10017,10018,10019,10020,10021,10022,10023,10024,10025,10026,10027,10028,10029,10030,10031,10032,10033,10034,10035,10036,10037,10038,10039,10040,10041,10044,10045,10048,10055,10060,10069,10090,10095,10098,10099,10103,10104,10105,10106,10107,10110,10111,10112,10115,10118,10119,10120,10121,10122,10123,10128,10151,10152,10153,10154,10155,10158,10161,10162,10165,10166,10167,10168,10169,10170,10171,10172,10173,10174,10175,10176,10177,10178,10199,10270,10271,10278,10279,10280,10281,10282,10301,10302,10303,10304,10305,10306,10307,10308,10309,10310,10311,10312,10314,10451,10452,10453,10454,10455,10456,10457,10458,10459,10460,10461,10462,10463,10464,10465,10466,10467,10468,10469,10470,10471,10472,10473,10474,10475,11004,11101,11102,11103,11104,11105,11106,11109,11201,11203,11204,11205,11206,11207,11208,11209,11210,11211,11212,11213,11214,11215,11216,11217,11218,11219,11220,11221,11222,11223,11224,11225,11226,11228,11229,11230,11231,11232,11233,11234,11235,11236,11237,11238,11239,11241,11242,11243,11249,11252,11256,11351,11354,11355,11356,11357,11358,11359,11360,11361,11362,11363,11364,11365,11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11377,11378,11379,11385,11411,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11426,11427,11428,11429,11430,11432,11433,11434,11435,11436,11691,11692,11693,11694,11697,10451,10452,10453,10454,10455,10456,10457,10458,10459,10460,10461,10462,10463,10464,10465,10466,10467,10468,10469,10470,10471,10472,10473,10474,10475,11201,11203,11204,11205,11206,11207,11208,11209,11210,11211,11212,11213,11214,11215,11216,11217,11218,11219,11220,11221,11222,11223,11224,11225,11226,11228,11229,11230,11231,11232,11233,11234,11235,11236,11237,11238,11239,11241,11242,11243,11249,11252,11256,10001,10002,10003,10004,10005,10006,10007,10009,10010,10011,10012,10013,10014,10015,10016,10017,10018,10019,10020,10021,10022,10023,10024,10025,10026,10027,10028,10029,10030,10031,10032,10033,10034,10035,10036,10037,10038,10039,10040,10041,10044,10045,10048,10055,10060,10069,10090,10095,10098,10099,10103,10104,10105,10106,10107,10110,10111,10112,10115,10118,10119,10120,10121,10122,10123,10128,10151,10152,10153,10154,10155,10158,10161,10162,10165,10166,10167,10168,10169,10170,10171,10172,10173,10174,10175,10176,10177,10178,10199,10270,10271,10278,10279,10280,10281,10282,11101,11102,11103,11004,11104,11105,11106,11109,11351,11354,11355,11356,11357,11358,11359,11360,11361,11362,11363,11364,11365,11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11377,11378,11379,11385,11411,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11426,11427,11428,11429,11430,11432,11433,11434,11435,11436,11691,11692,11693,11694,11697,10301,10302,10303,10304,10305,10306,10307,10308,10309,10310,10311,10312,10314';


       // If it's a NYC zipcode, $35 charge
        if (stristr($nyc_zipcodes, $zip_code)) {
          $delivery_fee = 35;
          $delivery_fee_display = t('New York City delivery/pickup fee: $35.00');
          $delivery_fee_flag = FALSE;
        }

        elseif ($delivery_distance < 25) {
          $delivery_fee = 0;
          $delivery_fee_display = t('Free delivery/pickup');
          $delivery_fee_flag = FALSE;
        }

        elseif (($delivery_distance > 25) && ($delivery_distance <= 50)) {
          $delivery_fee = '50';
          $delivery_fee_display = t('Free delivery/pickup within 25-50 miles');
          $delivery_fee_flag = FALSE;
        }

        else {
          $delivery_fee = 0;
          $delivery_fee_display = t('We will contact you regarding the delivery fee');
          $delivery_fee_flag = TRUE;
        }



        /*
          calculate rental fee, delivery fee, tax and total amount
          $250 per 24 hours X $duration
          $total_rental = $duration*250
          NJ tax rate 7.0%
          $tax=($salary*07)/100;
          $total_amount = ($total_rental+$tax);
        */

        $rental_rate = 250;
        $rental_rate_display = number_format($rental_rate,2);
        $total_rental = ($duration*$rental_rate);
        $total_rental_display = number_format($total_rental,2);
        $taxable_total = ($total_rental+$delivery_fee);
        $taxable_total_display = number_format($taxable_total,2);
        $tax = ($taxable_total*07)/100;
        $tax_display = number_format($tax,2);
        $total_amount = ($taxable_total+$tax);
        $total_amount_display = number_format($total_amount,2);


        // set payment field values
        $form['submitted']['rates_fees']['delivery_distance']['#default_value'] = $delivery_distance_display;
        $form['submitted']['rates_fees']['delivery_fee']['#default_value'] = $delivery_fee;

        $form['submitted']['rates_fees']['rental_rate']['#default_value'] = $rental_rate_display;
        $form['submitted']['rates_fees']['duration']['#default_value'] = $duration_display;
        $form['submitted']['rates_fees']['total_rental']['#default_value'] = $total_rental_display;

        $form['submitted']['rates_fees']['subtotal']['#default_value'] = $taxable_total_display;
        $form['submitted']['rates_fees']['tax']['#default_value'] = $tax_display;
        $form['submitted']['rates_fees']['total_cost']['#default_value'] = $total_amount_display;


        // $form['delivery_fee_flag'] = array(
        //   '#type' => 'textfield',
        //   '#title' => t('Delivery fee flag'),
        //   '#default_value' =>  t('Negotiate fee with customer and collect on delivery'),
        // );


        // $form['card_authorization_notice'] = array(
        //   '#type' => 'textfield',
        //   '#title' => t('Please note'),
        //   '#default_value' =>  t('TODO Add text from FAQ or link to it'),
        // );


      }

    }

    else {

      drupal_goto('motorcycles');

    }


  } // $form_id == 'webform_client_form_8')

} // function fastlane_form_alter(&$form, &$form_state, $form_id)

/**
 * Respond to a Webform submission being inserted.
 *
 * Note that this hook is called after a submission has already been saved to
 * the database. If needing to modify the submission prior to insertion, use
 * hook_webform_submission_presave().
 *
 * @param $node
 *   The Webform node on which this submission was made.
 * @param $submission
 *   The Webform submission that was just inserted into the database.
 */
function fastlane_webform_submission_insert($node, $submission) {
  // Update a record in a 3rd-party module table when a submission is updated.
  //
  // dpm($node, '$node');
  // dpm($submission->data, '$submission->data');

//   module_load_include('inc', 'availability_calendar');
//   //
  db_update('availability_calendar_availability')
    ->fields(array(
      'date' => $submission->data[28][0],
      // 'sid' => '4', // this is the Pending state
      'sid' => '3', // this is the Rented state
    ))
    ->condition('cid', $submission->data[30][0], '=')
    ->condition('date', $submission->data[28][0], '=')
    ->execute();

  db_update('availability_calendar_availability')
    ->fields(array(
      'date' => $submission->data[29][0],
      // 'sid' => '4', // this is the Pending state
      'sid' => '3', // this is the Rented state
    ))
    ->condition('cid', $submission->data[30][0], '=')
    ->condition('date', $submission->data[29][0], '=')
    ->execute();

  // drupal_set_message('deliver date - cid = ' . $submission->cid->value . ' from-date = ' . $submission->from_iso->value);
  // drupal_set_message('pickup date - cid = ' . $submission->cid->value . ' to-date = ' . $submission->to_iso->value);

  // drupal_set_message('nid = ' . $node->nid);
  // drupal_set_message('sid = ' . $submission->sid);
  // drupal_set_message('deliver date = ' . $submission->data[28][0]);
  // drupal_set_message('pick-up date = ' . $submission->data[29][0]);
  // drupal_set_message('calendar id = ' . $submission->data[30][0]);
}
